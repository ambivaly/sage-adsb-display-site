/*
Reminders: More specific beats general, and for react-leaflet you pretty much have to be extra specific everywhere.
Examples can be seen when needing to use .circular-map .leaflet-tooltip-top instead of just generic .leaflet-tooltip-top
*/

/*
Fonts in use are:
IBM Plex Sans


*/

@import url('https://fonts.googleapis.com/css2?family=IBM+Plex+Sans:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;1,100;1,200;1,300;1,400;1,500;1,600;1,700&display=swap');

/* Set theme to Dark */
:root {
  color-scheme: dark;
}

/* Set default cursor, font, and margins */
.html,
body {
  margin: 0;
  font-family: "IBM Plex Sans";
  color: greenyellow;
  cursor: url('../../images/mouseat.png') 0 0, auto;
}

/* Div that adds a background and contains both the map and the display components */
.app-container {
  position: relative;
  aspect-ratio: 16/9;
  width: 100vw;
  background-image: url("../../images/sage-background.png");
  background-size: cover;
  overflow: auto;
}

/* Div Label styles */
.display-labels {
  margin: auto;
  text-align: center;
  color: white;
  background-color: black;
  border-radius: 5px;
}

/* Parent container for the map and label, controls positioning */
.map-container {
  position: absolute;
  top: 1.75%;
  left: 13.75%;
  aspect-ratio: 1/1;
  width: 50%;
  font-size: 1.05vw;
  z-index: 0;
}

/* Main container for the map, makes it a circle with a 1/1 aspect */
.circular-map {
  position: relative;
  width: 80%;
  aspect-ratio: 1;
  border: 0.3vw solid goldenrod;
  border-radius: 50%;
  margin: auto;
  container-type: inline-size;
}

/* Controls the color/size of the labels */
.circular-map .aircraft-label,
.circular-map .airport-label {
  color: greenyellow;
  background: transparent;
  border: 0px solid transparent;
  box-shadow: none;
  font-size: 0.7vw
}

/* Get rid of the tooltip background chaff */
.circular-map .leaflet-tooltip-top:before,
.circular-map .leaflet-tooltip-bottom:before,
.circular-map .leaflet-tooltip-left:before,
.circular-map .leaflet-tooltip-right:before {
    border: 0px;
    background: transparent;
}

/* Parent container for the aircraft details position with the label */
.marker-details {
  position: absolute;
  top: 25.8%;
  right: 20.7%;
  width: 15%;
  height: 50%;
  font-size: 0.7vw; /*For some reason, this doesn't seem to work on the facebook browser*/
  color: greenyellow;
  overflow: hidden;
}

/* Container for the actual aircraft details information */
.selected-aircraft-info {
  font-family: "IBM Plex Sans";
  font-size: 0.9vw;
  color: greenyellow;
  background-color: black;
  border: 0.3vw solid goldenrod;
  padding-left: 3%;
  padding-top: 1%;
  overflow: hidden;
  white-space: nowrap;
  height: 20vw;
}

/* Changes mouse cursor on marker hover to be lit up (Very subtle image change, but I love it) */
.circular-map .leaflet-interactive {
  cursor: url('../../images/mouseover.png') 0 0, auto;
}

/* Add this class to an element to invoke the fade animation */
.fadeOut {
 animation: fadeAnim 6s infinite;
}

/* Make the aircraft icons have responsive sizes */
.circular-map .aircraft-icon {
  height: 3vw !important;
  width: 3vw !important;
}

/* Make the airport icons have responsive sizes */
.circular-map .airport-icon {
  height: 0.9vw !important;
  width: 0.9vw !important;
}

/* Style for the line that scans down the map */
@container (inline-size){
  .scan-line {
    position: absolute;
    width: 100%;
    height: 1vw;
    z-index: 10000;
    background-color: rgba(255, 174, 0, 0.1);
    animation: scanAnim 3s infinite linear, flicker 0.2s infinite;
  }
}

/* 
Make the line go from the top to the bottom of the map 
Uses cqw(component width) because the map has no fixed height 
The height will always be equal to the width in my case, which is why this works
 */
@keyframes scanAnim {
  0% { transform: translateY(0); }
  100% { transform: translateY(100cqw); }
}

/* Fade out the markers with this animation, has a slight delay */
@keyframes fadeAnim {
  0% {opacity: 1;}
  10% {opacity: 1;}
  100% {opacity: 0.5;}
}

/* 
  CRT Code below credit to aleclowns.com, causes a nice flicker and text shadow effect
  Adjusted the colors a bit to align with the view I was going for
 */
@keyframes flicker {
  0% {
    opacity: 0.27861;
  }
  5% {
    opacity: 0.34769;
  }
  10% {
    opacity: 0.23604;
  }
  15% {
    opacity: 0.90626;
  }
  20% {
    opacity: 0.18128;
  }
  25% {
    opacity: 0.83891;
  }
  30% {
    opacity: 0.65583;
  }
  35% {
    opacity: 0.67807;
  }
  40% {
    opacity: 0.26559;
  }
  45% {
    opacity: 0.84693;
  }
  50% {
    opacity: 0.96019;
  }
  55% {
    opacity: 0.08594;
  }
  60% {
    opacity: 0.20313;
  }
  65% {
    opacity: 0.71988;
  }
  70% {
    opacity: 0.53455;
  }
  75% {
    opacity: 0.37288;
  }
  80% {
    opacity: 0.71428;
  }
  85% {
    opacity: 0.70419;
  }
  90% {
    opacity: 0.7003;
  }
  95% {
    opacity: 0.36108;
  }
  100% {
    opacity: 0.24387;
  }
}
@keyframes textShadow {
  0% {
    text-shadow: 0.4389924193300864px 0 1px rgba(0,30,255,0.5), -0.4389924193300864px 0 1px rgba(255,0,80,0.3), 0 0 3px;
  }
  5% {
    text-shadow: 2.7928974010788217px 0 1px rgba(0,30,255,0.5), -2.7928974010788217px 0 1px rgba(255,0,80,0.3), 0 0 3px;
  }
  10% {
    text-shadow: 0.02956275843481219px 0 1px rgba(0,30,255,0.5), -0.02956275843481219px 0 1px rgba(255,0,80,0.3), 0 0 3px;
  }
  15% {
    text-shadow: 0.40218538552878136px 0 1px rgba(0,30,255,0.5), -0.40218538552878136px 0 1px rgba(255,0,80,0.3), 0 0 3px;
  }
  20% {
    text-shadow: 3.4794037899852017px 0 1px rgba(0,30,255,0.5), -3.4794037899852017px 0 1px rgba(255,0,80,0.3), 0 0 3px;
  }
  25% {
    text-shadow: 1.6125630401149584px 0 1px rgba(0,30,255,0.5), -1.6125630401149584px 0 1px rgba(255,0,80,0.3), 0 0 3px;
  }
  30% {
    text-shadow: 0.7015590085143956px 0 1px rgba(0,30,255,0.5), -0.7015590085143956px 0 1px rgba(255,0,80,0.3), 0 0 3px;
  }
  35% {
    text-shadow: 3.896914047650351px 0 1px rgba(0,30,255,0.5), -3.896914047650351px 0 1px rgba(255,0,80,0.3), 0 0 3px;
  }
  40% {
    text-shadow: 3.870905614848819px 0 1px rgba(0,30,255,0.5), -3.870905614848819px 0 1px rgba(255,0,80,0.3), 0 0 3px;
  }
  45% {
    text-shadow: 2.231056963361899px 0 1px rgba(0,30,255,0.5), -2.231056963361899px 0 1px rgba(255,0,80,0.3), 0 0 3px;
  }
  50% {
    text-shadow: 0.08084290417898504px 0 1px rgba(0,30,255,0.5), -0.08084290417898504px 0 1px rgba(255,0,80,0.3), 0 0 3px;
  }
  55% {
    text-shadow: 2.3758461067427543px 0 1px rgba(0,30,255,0.5), -2.3758461067427543px 0 1px rgba(255,0,80,0.3), 0 0 3px;
  }
  60% {
    text-shadow: 2.202193051050636px 0 1px rgba(0,30,255,0.5), -2.202193051050636px 0 1px rgba(255,0,80,0.3), 0 0 3px;
  }
  65% {
    text-shadow: 2.8638780614874975px 0 1px rgba(0,30,255,0.5), -2.8638780614874975px 0 1px rgba(255,0,80,0.3), 0 0 3px;
  }
  70% {
    text-shadow: 0.48874025155497314px 0 1px rgba(0,30,255,0.5), -0.48874025155497314px 0 1px rgba(255,0,80,0.3), 0 0 3px;
  }
  75% {
    text-shadow: 1.8948491305757957px 0 1px rgba(0,30,255,0.5), -1.8948491305757957px 0 1px rgba(255,0,80,0.3), 0 0 3px;
  }
  80% {
    text-shadow: 0.0833037308038857px 0 1px rgba(0,30,255,0.5), -0.0833037308038857px 0 1px rgba(255,0,80,0.3), 0 0 3px;
  }
  85% {
    text-shadow: 0.09769827255241735px 0 1px rgba(0,30,255,0.5), -0.09769827255241735px 0 1px rgba(255,0,80,0.3), 0 0 3px;
  }
  90% {
    text-shadow: 3.443339761481782px 0 1px rgba(0,30,255,0.5), -3.443339761481782px 0 1px rgba(255,0,80,0.3), 0 0 3px;
  }
  95% {
    text-shadow: 2.1841838852799786px 0 1px rgba(0,30,255,0.5), -2.1841838852799786px 0 1px rgba(255,0,80,0.3), 0 0 3px;
  }
  100% {
    text-shadow: 2.6208764473832513px 0 1px rgba(0,30,255,0.5), -2.6208764473832513px 0 1px rgba(255,0,80,0.3), 0 0 3px;
  }
}
.crt::after {
  content: " ";
  display: block;
  position: absolute;
  top: 0;
  left: 0;
  bottom: 0;
  right: 0;
  background: rgba(18, 16, 16, 0.1);
  opacity: 0;
  z-index: 10000;
  pointer-events: none;
  animation: flicker 0.15s infinite;
}
.crt::before {
  content: " ";
  display: block;
  position: absolute;
  top: 0;
  left: 0;
  bottom: 0;
  right: 0;
  background: linear-gradient(rgba(0, 0, 0, 0) 50%, rgba(255, 243, 79, 0.295) 50%), linear-gradient(90deg, rgba(11, 10, 9, 0.06), rgba(255, 216, 61, 0.02), rgba(255, 229, 101, 0.06));
  z-index: 10000;
  background-size: 100% 2px, 3px 100%;
  pointer-events: none;
}
.crt {
  animation: textShadow 1.6s infinite;
  position: relative;
  z-index: 10000;
}